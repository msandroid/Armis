{
  "name": "armis",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "build": "tsc && vite build",
    "dev": "vite",
    "electron": "electron electron/main.js",
    "electron-dev": "NODE_ENV=development electron electron/main.js",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview",
    "tts:example": "tsx src/examples/gemini-tts-example.ts",
    "tts:inworld": "tsx src/examples/inworld-tts-example.ts",
    "tts:local-setup": "python models/inworld-tts-local/setup.py",
    "tts:local-test": "python models/inworld-tts-local/local_tts_service.py list_models",
    "tts:local-example": "tsx src/examples/local-inworld-tts-example.ts",
    "agents:all": "tsx src/examples/run-langchain-agents.ts all",
    "agents:basic": "tsx src/examples/run-langchain-agents.ts basic",
    "agents:chat": "tsx src/examples/run-langchain-agents.ts chat",
    "agents:conversational": "tsx src/examples/run-langchain-agents.ts conversational",
    "agents:zero-shot": "tsx src/examples/run-langchain-agents.ts zero-shot",
    "agents:structured": "tsx src/examples/run-langchain-agents.ts structured",
    "agents:openai-functions": "tsx src/examples/run-langchain-agents.ts openai-functions",
    "agents:react": "tsx src/examples/run-langchain-agents.ts react",
    "agents:multiple": "tsx src/examples/run-langchain-agents.ts multiple",
    "agents:custom-tools": "tsx src/examples/run-langchain-agents.ts custom-tools",
    "agents:batch": "tsx src/examples/run-langchain-agents.ts batch",
    "chains:examples": "tsx src/examples/run-langchain-chains.ts",
    "chains:basic": "tsx src/examples/run-langchain-chains.ts basic",
    "chains:conversation": "tsx src/examples/run-langchain-chains.ts conversation",
    "chains:sequential": "tsx src/examples/run-langchain-chains.ts sequential",
    "chains:router": "tsx src/examples/run-langchain-chains.ts router",
    "chains:qa": "tsx src/examples/run-langchain-chains.ts qa",
    "chains:documents": "tsx src/examples/run-langchain-chains.ts documents",
    "chains:constitutional": "tsx src/examples/run-langchain-chains.ts constitutional",
    "chains:custom": "tsx src/examples/run-langchain-chains.ts custom",
    "chains:parallel": "tsx src/examples/run-langchain-chains.ts parallel",
    "chains:test": "tsx src/examples/simple-chains-test.ts",
    "chains:mock": "tsx src/examples/mock-chains-test.ts",
    "fact-check:example": "tsx src/examples/fact-checking-example.ts",
    "fact-check:test": "tsx src/examples/fact-checking-example.ts test",
    "fact-check:run-tests": "tsx src/examples/fact-checking-test.ts",
    "fact-check:ollama-test": "tsx src/examples/ollama-fact-check-test.ts",
    "web-search:example": "tsx src/examples/gemini-web-search-example.ts",
    "mcp:langchain-example": "tsx src/examples/langchain-mcp-integration-example.ts",
    "mcp:langchain-basic": "tsx src/examples/langchain-mcp-integration-example.ts basic",
    "mcp:langchain-multi": "tsx src/examples/langchain-mcp-integration-example.ts multi",
    "mcp:langchain-langgraph": "tsx src/examples/langchain-mcp-integration-example.ts langgraph",
    "mcp:langchain-error": "tsx src/examples/langchain-mcp-integration-example.ts error",
    "mcp:real-server": "tsx src/examples/real-mcp-server-integration.ts",
    "mcp:ollama-example": "tsx src/examples/ollama-mcp-integration-example.ts",
    "mcp:ollama-test": "tsx src/examples/ollama-mcp-integration-example.ts test",
    "mcp:ollama-basic": "tsx src/examples/ollama-mcp-integration-example.ts basic",
    "mcp:ollama-direct": "tsx src/examples/ollama-mcp-integration-example.ts direct",
    "mcp:ollama-compare": "tsx src/examples/ollama-mcp-integration-example.ts compare",
    "mcp:playwright-example": "tsx src/examples/playwright-mcp-integration-example.ts",
    "mcp:playwright-basic": "tsx src/examples/playwright-mcp-integration-example.ts basic",
    "mcp:playwright-search": "tsx src/examples/playwright-mcp-integration-example.ts search",
    "mcp:playwright-network": "tsx src/examples/playwright-mcp-integration-example.ts network",
    "mcp:playwright-tabs": "tsx src/examples/playwright-mcp-integration-example.ts tabs",
    "mcp:playwright-langchain": "tsx src/examples/playwright-mcp-integration-example.ts langchain",
    "mcp:playwright-ollama": "tsx src/examples/playwright-mcp-integration-example.ts ollama",
    "mcp:playwright-error": "tsx src/examples/playwright-mcp-integration-example.ts error",
    "mulmocast:example": "tsx src/examples/mulmocast-integration-example.ts",
    "mulmocast:workflow": "tsx src/examples/mulmocast-integration-example.ts workflow",
    "mulmocast:story": "tsx src/examples/mulmocast-integration-example.ts story",
    "mulmocast:prompt": "tsx src/examples/mulmocast-integration-example.ts prompt",
    "graphai:example": "tsx src/examples/graphai-integration-example.ts",
    "graphai:custom": "tsx src/examples/graphai-integration-example.ts custom",
    "graphai:composite": "tsx src/examples/graphai-integration-example.ts composite",
    "graphai:agents": "tsx src/examples/graphai-integration-example.ts agents",
    "graphai:status": "tsx src/examples/graphai-integration-example.ts status",
    "whisper:download": "node download-whisper-models.cjs",
    "whisper:download-tiny": "node download-whisper-models.cjs tiny-q5_1",
    "whisper:download-tiny-en": "node download-whisper-models.cjs tiny.en-q5_1",
    "whisper:download-base": "node download-whisper-models.cjs base-q5_1",
    "whisper:download-base-en": "node download-whisper-models.cjs base.en-q5_1",
    "whisper:download-small": "node download-whisper-models.cjs small-q5_1",
    "whisper:download-small-en": "node download-whisper-models.cjs small.en-q5_1",
    "whisper:download-medium": "node download-whisper-models.cjs medium-q5_0",
    "whisper:download-medium-en": "node download-whisper-models.cjs medium.en-q5_0",
    "whisper:download-large-v3": "node download-whisper-models.cjs large-v3-q5_0",
    "whisper:download-large-v3-turbo": "node download-whisper-models.cjs large-v3-turbo-q5_0",
    "api-server": "node api-server.js",
    "dev:api": "node api-server.js",
    "whisper:node-test": "tsx src/examples/whisper-node-example.ts",
    "whisper:extension-test": "tsx src/examples/whisper-extension-example.ts",
    "whisper:factory-test": "tsx src/examples/whisper-factory-test.ts",
    "stt:settings-test": "tsx src/examples/stt-settings-test.ts"
  },
  "dependencies": {
    "@ai-sdk/anthropic": "^2.0.4",
    "@ai-sdk/deepseek": "^1.0.7",
    "@ai-sdk/fireworks": "^1.0.7",
    "@ai-sdk/google": "^2.0.6",
    "@ai-sdk/groq": "^2.0.10",
    "@ai-sdk/mistral": "^2.0.5",
    "@ai-sdk/openai": "^2.0.15",
    "@ai-sdk/perplexity": "^2.0.3",
    "@ai-sdk/react": "^2.0.15",
    "@ai-sdk/togetherai": "^1.0.7",
    "@ai-sdk/xai": "^2.0.7",
    "@babel/parser": "^7.23.6",
    "@babel/traverse": "^7.23.6",
    "@google/genai": "^1.16.0",
    "@google/generative-ai": "^0.24.1",
    "@graphai/anthropic_agent": "^2.0.11",
    "@graphai/browserless_agent": "^2.0.1",
    "@graphai/gemini_agent": "^2.0.1",
    "@graphai/groq_agent": "^2.0.2",
    "@graphai/input_agents": "^1.0.2",
    "@graphai/openai_agent": "^2.0.7",
    "@graphai/stream_agent_filter": "^2.0.2",
    "@graphai/vanilla": "^2.0.12",
    "@graphai/vanilla_node_agents": "^2.0.4",
    "@langchain/anthropic": "^0.3.26",
    "@langchain/community": "^0.3.53",
    "@langchain/core": "^0.3.72",
    "@langchain/google-genai": "^0.2.16",
    "@langchain/langgraph": "^0.4.6",
    "@langchain/openai": "^0.6.9",
    "@modelcontextprotocol/sdk": "^1.17.3",
    "@node-llama-cpp/mac-arm64-metal": "^3.12.1",
    "@playwright/mcp": "^0.0.34",
    "@radix-ui/react-collapsible": "^1.1.12",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-hover-card": "^1.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-scroll-area": "^1.0.5",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.6",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.6",
    "@radix-ui/react-tabs": "^1.1.13",
    "@radix-ui/react-tooltip": "^1.2.8",
    "@runwayml/sdk": "^2.8.2",
    "@tailwindcss/typography": "^0.5.16",
    "@xterm/addon-fit": "^0.10.0",
    "@xterm/addon-web-links": "^0.11.0",
    "@xterm/xterm": "^5.5.0",
    "ai": "^5.0.15",
    "ai-elements": "^1.0.9",
    "autoprefixer": "^10.4.21",
    "chokidar": "^3.5.3",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "dotenv": "^17.2.1",
    "framer-motion": "^10.16.4",
    "glob": "^10.3.10",
    "google-auth-library": "^10.2.1",
    "graphai": "^2.0.14",
    "haystack-core": "^3.0.5",
    "katex": "^0.16.22",
    "langchain": "^0.3.31",
    "lucide-react": "^0.294.0",
    "material-icon-theme": "^5.26.0",
    "media-chrome": "^4.13.0",
    "next-themes": "^0.4.6",
    "node-fetch": "^3.3.2",
    "node-llama-cpp": "^3.12.1",
    "path-browserify": "^1.0.1",
    "pdfjs-dist": "^5.4.54",
    "process": "^0.11.10",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-dropzone": "^14.2.3",
    "react-pdf": "^10.1.0",
    "rehype-katex": "^7.0.1",
    "remark-gfm": "^4.0.1",
    "semantic-router": "^1.0.0",
    "streamdown": "^1.1.4",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "tqdm": "^2.0.3",
    "uuid": "^9.0.1",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@types/babel__traverse": "^7.20.5",
    "@types/katex": "^0.16.7",
    "@types/node": "^20.10.5",
    "@types/react": "^18.2.37",
    "@types/react-dom": "^18.2.15",
    "@types/uuid": "^9.0.7",
    "@typescript-eslint/eslint-plugin": "^6.10.0",
    "@typescript-eslint/parser": "^6.10.0",
    "@vitejs/plugin-react": "^4.1.1",
    "buffer": "^6.0.3",
    "cors": "^2.8.5",
    "crypto-browserify": "^3.12.1",
    "electron": "^28.0.0",
    "eslint": "^8.53.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.4",
    "express": "^4.21.2",
    "postcss": "^8.4.31",
    "stream-browserify": "^3.0.0",
    "tailwindcss": "^3.3.5",
    "tsx": "^4.20.4",
    "typescript": "^5.2.2",
    "util": "^0.12.5",
    "vite": "^5.0.0"
  }
}
